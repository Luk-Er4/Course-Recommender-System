image: python:3.12

services:
  - mysql:latest

variables:
  MYSQL_DATABASE: "course_recommender"
  MYSQL_ROOT_PASSWORD: "1234!@#E"

  DOCKER_DRIVER: overlay2
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

stages:
  - Environment_Setup
  - DB_Connection
  - Functions_Test
  - Build_Push_GitLab
  - Build_Push_Azure
  - Deploy_ACI

Test_Environment:
  stage: Environment_Setup
  script: 
    - echo "Setting up Python environment..."
    - pip install --upgrade pip
    - pip install pytest
    - pip install fastapi uvicorn
    - pip install mysql-connector-python
  artifacts:
    paths: [venv/]

Client_Connection:
  stage: DB_Connection
  script:
    - echo "Setting up Python environment..."
    - pip install --upgrade pip
    - pip install pytest
    - pip install fastapi uvicorn
    - pip install mysql-connector-python

    - echo "Testing Client DB Connection..."
    - pytest ./test/test_client_dbconnection.py -v

Admin_Connection:
  stage: DB_Connection
  script:
    - echo "Setting up Python environment..."
    - pip install --upgrade pip
    - pip install pytest
    - pip install fastapi uvicorn
    - pip install mysql-connector-python

    - echo "Testing Admin DB Connection..."
    - pytest ./test/test_admin_dbconnection.py -v

Client_Function:
  stage: Functions_Test
  script:
    - echo "Setting up Python environment..."
    - pip install --upgrade pip
    - pip install pytest
    - pip install fastapi uvicorn
    - pip install mysql-connector-python

    - echo "Testing Client Functions..."
    - pytest ./test/test_client_function.py -v
  needs: ["Client_Connection"]

Admin_Function:
  stage: Functions_Test
  script:
    - echo "Setting up Python environment..."
    - pip install --upgrade pip
    - pip install pytest
    - pip install fastapi uvicorn
    - pip install mysql-connector-python

    - echo "Testing Admin Functions..."
    - pytest ./test/test_admin_function.py -v
  needs: ["Admin_Connection"]

Admin_build_push_GitLab:
  stage: Build_Push_GitLab
  image: docker:latest
  services:
    - docker:dind
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE/admin:$CI_COMMIT_REF_SLUG
  script:
    - echo "Logging into registry..."
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - echo "Building image..."
    - docker build -f Dockerfile.admin -t $IMAGE_TAG .
    - docker tag $IMAGE_TAG $CI_REGISTRY_IMAGE:latest
    - echo "Pushing image..."
    - docker push $IMAGE_TAG
    - docker push $CI_REGISTRY_IMAGE:latest

Client_build_push_GitLab:
  stage: Build_Push_GitLab
  image: docker:latest
  services:
    - docker:dind
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE/client:$CI_COMMIT_REF_SLUG
  script:
    - echo "Logging into registry..."
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - echo "Building image..."
    - docker build -f Dockerfile.client -t $IMAGE_TAG .
    - docker tag $IMAGE_TAG $CI_REGISTRY_IMAGE:latest
    - echo "Pushing image..."
    - docker push $IMAGE_TAG
    - docker push $CI_REGISTRY_IMAGE:latest

Admin_build_push_Azure:
  stage: Build_Push_Azure
  image: docker:latest
  services:
    - docker:dind
  variables:
    AZURE_IMAGE_TAG: $ACR_LOGIN_SERVER/admin_ver:latest
  script:
    - echo $ACR_PASSWORD | docker login $ACR_LOGIN_SERVER -u $ACR_USERNAME --password-stdin
    - docker build -f Dockerfile.admin -t $AZURE_IMAGE_TAG .
    - docker push $AZURE_IMAGE_TAG

Client_build_push_Azure:
  stage: Build_Push_Azure
  image: docker:latest
  services:
    - docker:dind
  variables:
    AZURE_IMAGE_TAG: $ACR_LOGIN_SERVER/admin_ver:latest
  script:
    - echo $ACR_PASSWORD | docker login $ACR_LOGIN_SERVER -u $ACR_USERNAME --password-stdin
    - docker build -f Dockerfile.client -t $AZURE_IMAGE_TAG .
    - docker push $AZURE_IMAGE_TAG

######################

Deploy_Admin_to_Azure:
  stage: Deploy_ACI
  image: mcr.microsoft.com/azure-cli
  
  variables:
    AZURE_IMAGE_TAG: $ACR_LOGIN_SERVER/admin_ver:latest
  
  script:
    - echo "Logging into Azure..."
    - az login --service-principal --username $AZURE_APP_ID --password $CLIENT_SECRET --tenant $AZURE_TENANT_ID
    
    - echo "Deploying container..."
    - |
      az container create \
        --resource-group myself \
        --name asucourseadmin \
        --image $AZURE_IMAGE_TAG \
        --registry-login-server $ACR_LOGIN_SERVER \
        --registry-username $ACR_USERNAME \
        --registry-password $ACR_PASSWORD \
        --dns-name-label courseadmin$RANDOM \
        --ports 80 \
        --os-type Linux \
        --memory 1 \
        --cpu 1 \
        --location eastus
    
Deploy_Client_to_Azure:
  stage: Deploy_ACI
  image: mcr.microsoft.com/azure-cli
  
  variables:
    AZURE_IMAGE_TAG: $ACR_LOGIN_SERVER/client_ver:latest
  
  script:
    - echo "Logging into Azure..."
    - az login --service-principal --username $AZURE_APP_ID --password $CLIENT_SECRET --tenant $AZURE_TENANT_ID
    
    - echo "Deploying container..."
    - |
      az container create \
        --resource-group myself \
        --name asucourseclient \
        --image $AZURE_IMAGE_TAG \
        --registry-login-server $ACR_LOGIN_SERVER \
        --registry-username $ACR_USERNAME \
        --registry-password $ACR_PASSWORD \
        --dns-name-label courseclient$RANDOM \
        --ports 80 \
        --os-type Linux \
        --memory 1 \
        --cpu 1 \
        --location eastus


